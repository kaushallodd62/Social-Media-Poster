version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: app-user
      POSTGRES_PASSWORD: app-password
      POSTGRES_DB: social_media_poster
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app-user -d social_media_poster"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=app:create_app
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://app-user:app-password@postgres:5432/social_media_poster
      - PYTHONPATH=/app
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app
      - ./backend/migrations:/app/migrations
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/.env
    networks:
      - app-network
    command: >
      sh -c "export PYTHONPATH=/app &&
             flask db upgrade &&
             python app.py"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata: 